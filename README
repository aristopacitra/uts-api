#Teknologi yang digunakan
1. Node.js + Express.js
2. MySQL Database
3. EchoAPI untuk testing API

# Install dependencies
npm init -y
npm install express
npm install jsonwebtoken
npm install bcrypt

# Setup environment (.env)
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=yourpassword
DB_NAME=booking_db
PORT=3000

# Run server
node index.js

# Struktur Database
- Users
- Room_Types
- Rooms
- Schedules
- Bookings

# Endpoints API
- Users
GET	    /users	    Mengambil data semua user
GET     /users:id   Mengambil data user tertentu
POST    /users	    Menambah data user baru
PUT	    /users/:id	Mengubah data user
DELETE  /users/:id	Menghapus data user

- Rooms
GET	    /rooms	    Mengambil data semua ruangan
POST	/rooms	    Menambah data ruangan baru
PUT	    /rooms/:id	Mengubah data ruangan
DELETE  /rooms/:id	Menghapus data ruangan

- Room Types
GET	    /room-types	    Mengambil data semua jenis ruangan
GET     /room-types/:id Mengambil data jenis ruangan tertentu
POST	/room-types	    Menambah data jenis ruangan
PUT	    /room-types/:id	Mengubah data jenis ruangan
DELETE	/room-types/:id	Menghapus data jenis ruangan

- Bookings
GET	    /bookings	    Mengambil data semua booking
POST	/bookings	    Menambah data booking baru
PUT	    /bookings/:id	Mengubah data booking
DELETE	/bookings/:id	Menghapus data booking

- Schedules
GET	    /schedules	    Mengambil data semua slot waktu
POST	/schedules	    Menambah data slot baru
PUT	    /schedules/:id	Mengubah data slot waktu
DELETE	/schedules/:id	Menghapus data slot waktu

- Cek Ketersediaan Ruang
GET	    /rooms/available?{params}   Cek ruang kosong berdasarkan tanggal & slot
Ex :    /rooms/available?date=2025-04-30&slot=09:00

- Filter Booking
GET     /bookings/filter?{params}   Mengambil data booking sesuai dengan filter yang dipilih
Ex :    /bookings/filter?user_id=6&booking_date=2025-05-01&room_id=1&schedule_id=2

# Testing Menggunakan EchoAPI
1. Jalankan server lokal (node index.js).
2. Buka EchoAPI.
3. Buat collection baru misal: Room Booking API.
4. Tambahkan request sesuai endpoint.
5. Gunakan format http://localhost:3000/endpoint
6. Gunakan JSON untuk body request POST dan PUT
7. Cek response status dan data.